# Run when commits are pushed to master
on:
  workflow_dispatch:
  push:
    # Run when commits are pushed to mainline branch (main or master)
    # Set this to the mainline branch you are using
    branches:
      - master

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

# This workflow builds, provisions, and deploys your Azure application using azd and GitHub Actions.
# It uses federated credentials for secure, secretless authentication to Azure.
# Steps:
# 1. Checks out your code
# 2. Caches npm dependencies for faster builds
# 3. Installs dependencies with npm ci
# 4. Installs the Azure Developer CLI (azd)
# 5. Authenticates to Azure using OIDC
# 6. Provisions infrastructure as defined in azure.yaml/bicep
# 7. Deploys your application to Azure
#
# Required repository variables/secrets:
#   AZURE_CLIENT_ID, AZURE_TENANT_ID, AZURE_SUBSCRIPTION_ID, AZURE_ENV_NAME, AZURE_LOCATION
#   AZD_INITIAL_ENVIRONMENT_CONFIG (secret, for initial environment config)
#
# For more info, see:
#   https://learn.microsoft.com/azure/developer/github/connect-from-azure
#   https://learn.microsoft.com/azure/developer/azure-developer-cli/

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
    steps:
      # Checkout code from repository
      - name: Checkout
        uses: actions/checkout@v4
      # Install Azure Developer CLI (azd)
      - name: Install azd
        uses: Azure/setup-azd@v2.0.0
      # Authenticate to Azure using federated credentials (OIDC)
      - name: Log in with Azure (Federated Credentials)
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh
      # Provision infrastructure as code
      - name: Provision Infrastructure
        run: |
          set -e
          azd provision --no-prompt
        env:
          AZD_INITIAL_ENVIRONMENT_CONFIG: ${{ secrets.AZD_INITIAL_ENVIRONMENT_CONFIG }}
      # Deploy application to Azure
      - name: Deploy Application
        run: |
          set -e
          azd deploy --no-prompt
